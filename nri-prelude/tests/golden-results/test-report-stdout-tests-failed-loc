↓ tests/TestSpec.hs:275
↓ suite loc
✗ test 1

Expectation failed at tests/TestSpec.hs:275
  273:               describe
  274:                 "suite loc"
✗ 275:                 [ test "test 1" (\_ -> Expect.fail "fail"),
  276:                   test "test 2" (\_ -> Expect.equal True False),
  277:                   test "test 3" (\_ -> Expect.notEqual True True),

fail

↓ tests/TestSpec.hs:276
↓ suite loc
✗ test 2

Expectation failed at tests/TestSpec.hs:276
  274:                 "suite loc"
  275:                 [ test "test 1" (\_ -> Expect.fail "fail"),
✗ 276:                   test "test 2" (\_ -> Expect.equal True False),
  277:                   test "test 3" (\_ -> Expect.notEqual True True),
  278:                   test

▼▼▼▼
False
╷
│ Expect.equal
╵
True
▲▲▲


↓ tests/TestSpec.hs:277
↓ suite loc
✗ test 3

Expectation failed at tests/TestSpec.hs:277
  275:                 [ test "test 1" (\_ -> Expect.fail "fail"),
  276:                   test "test 2" (\_ -> Expect.equal True False),
✗ 277:                   test "test 3" (\_ -> Expect.notEqual True True),
  278:                   test
  279:                     "test 4"

True
╷
│ Expect.notEqual
╵
True


↓ tests/TestSpec.hs:278
↓ suite loc
✗ test 4

Expectation failed at tests/TestSpec.hs:283
  281:                         True
  282:                           |> Expect.all
✗ 283:                             [ Expect.equal False
  284:                             ]
  285:                     ),

▼▼▼
True
╷
│ Expect.equal
╵
False
▲▲▲▲


↓ tests/TestSpec.hs:286
↓ suite loc
✗ test 5

Expectation failed at tests/TestSpec.hs:286
  284:                             ]
  285:                     ),
✗ 286:                   test "test 5" (\_ -> Expect.lessThan 1 (2 :: Int)),
  287:                   test "test 6" (\_ -> Expect.atMost 1 (2 :: Int)),
  288:                   test "test 7" (\_ -> Expect.greaterThan 2 (1 :: Int)),

▼
2
╷
│ Expect.lessThan
╵
1
▲


↓ tests/TestSpec.hs:287
↓ suite loc
✗ test 6

Expectation failed at tests/TestSpec.hs:287
  285:                     ),
  286:                   test "test 5" (\_ -> Expect.lessThan 1 (2 :: Int)),
✗ 287:                   test "test 6" (\_ -> Expect.atMost 1 (2 :: Int)),
  288:                   test "test 7" (\_ -> Expect.greaterThan 2 (1 :: Int)),
  289:                   test "test 8" (\_ -> Expect.atLeast 2 (1 :: Int)),

▼
2
╷
│ Expect.atMost
╵
1
▲


↓ tests/TestSpec.hs:288
↓ suite loc
✗ test 7

Expectation failed at tests/TestSpec.hs:288
  286:                   test "test 5" (\_ -> Expect.lessThan 1 (2 :: Int)),
  287:                   test "test 6" (\_ -> Expect.atMost 1 (2 :: Int)),
✗ 288:                   test "test 7" (\_ -> Expect.greaterThan 2 (1 :: Int)),
  289:                   test "test 8" (\_ -> Expect.atLeast 2 (1 :: Int)),
  290:                   test "test 9" (\_ -> Expect.atLeast 2 (1 :: Int)),

▼
1
╷
│ Expect.greaterThan
╵
2
▲


↓ tests/TestSpec.hs:289
↓ suite loc
✗ test 8

Expectation failed at tests/TestSpec.hs:289
  287:                   test "test 6" (\_ -> Expect.atMost 1 (2 :: Int)),
  288:                   test "test 7" (\_ -> Expect.greaterThan 2 (1 :: Int)),
✗ 289:                   test "test 8" (\_ -> Expect.atLeast 2 (1 :: Int)),
  290:                   test "test 9" (\_ -> Expect.atLeast 2 (1 :: Int)),
  291:                   test "test 9" (\_ -> Expect.within (Expect.Absolute 0.1) 1 2),

▼
1
╷
│ Expect.atLeast
╵
2
▲


↓ tests/TestSpec.hs:290
↓ suite loc
✗ test 9

Expectation failed at tests/TestSpec.hs:290
  288:                   test "test 7" (\_ -> Expect.greaterThan 2 (1 :: Int)),
  289:                   test "test 8" (\_ -> Expect.atLeast 2 (1 :: Int)),
✗ 290:                   test "test 9" (\_ -> Expect.atLeast 2 (1 :: Int)),
  291:                   test "test 9" (\_ -> Expect.within (Expect.Absolute 0.1) 1 2),
  292:                   test "test 9" (\_ -> Expect.notWithin (Expect.Relative 0.1) 1 1),

▼
1
╷
│ Expect.atLeast
╵
2
▲


↓ tests/TestSpec.hs:291
↓ suite loc
✗ test 9

Expectation failed at tests/TestSpec.hs:291
  289:                   test "test 8" (\_ -> Expect.atLeast 2 (1 :: Int)),
  290:                   test "test 9" (\_ -> Expect.atLeast 2 (1 :: Int)),
✗ 291:                   test "test 9" (\_ -> Expect.within (Expect.Absolute 0.1) 1 2),
  292:                   test "test 9" (\_ -> Expect.notWithin (Expect.Relative 0.1) 1 1),
  293:                   test "test 10" (\_ -> Expect.true False),

▼
2.0
╷
│ Expect.within Absolute 0.1
╵
1.0
▲


↓ tests/TestSpec.hs:292
↓ suite loc
✗ test 9

Expectation failed at tests/TestSpec.hs:292
  290:                   test "test 9" (\_ -> Expect.atLeast 2 (1 :: Int)),
  291:                   test "test 9" (\_ -> Expect.within (Expect.Absolute 0.1) 1 2),
✗ 292:                   test "test 9" (\_ -> Expect.notWithin (Expect.Relative 0.1) 1 1),
  293:                   test "test 10" (\_ -> Expect.true False),
  294:                   test "test 11" (\_ -> Expect.false True),

1.0
╷
│ Expect.notWithin Relative 0.1
╵
1.0


↓ tests/TestSpec.hs:293
↓ suite loc
✗ test 10

Expectation failed at tests/TestSpec.hs:293
  291:                   test "test 9" (\_ -> Expect.within (Expect.Absolute 0.1) 1 2),
  292:                   test "test 9" (\_ -> Expect.notWithin (Expect.Relative 0.1) 1 1),
✗ 293:                   test "test 10" (\_ -> Expect.true False),
  294:                   test "test 11" (\_ -> Expect.false True),
  295:                   test "test 12" (\_ -> Expect.ok (Err ())),

▼▼▼
True
╷
│ Expect.true
╵
False
▲▲▲▲


↓ tests/TestSpec.hs:294
↓ suite loc
✗ test 11

Expectation failed at tests/TestSpec.hs:294
  292:                   test "test 9" (\_ -> Expect.notWithin (Expect.Relative 0.1) 1 1),
  293:                   test "test 10" (\_ -> Expect.true False),
✗ 294:                   test "test 11" (\_ -> Expect.false True),
  295:                   test "test 12" (\_ -> Expect.ok (Err ())),
  296:                   test "test 13" (\_ -> Expect.err (Ok ())),

True
╷
│ Expect.false
╵
True


↓ tests/TestSpec.hs:295
↓ suite loc
✗ test 12

Expectation failed at tests/TestSpec.hs:295
  293:                   test "test 10" (\_ -> Expect.true False),
  294:                   test "test 11" (\_ -> Expect.false True),
✗ 295:                   test "test 12" (\_ -> Expect.ok (Err ())),
  296:                   test "test 13" (\_ -> Expect.err (Ok ())),
  297:                   test "test 14" (\_ -> Expect.succeeds (Task.fail "oops")),

I expected a Ok but got Err (())

↓ tests/TestSpec.hs:296
↓ suite loc
✗ test 13

Expectation failed at tests/TestSpec.hs:296
  294:                   test "test 11" (\_ -> Expect.false True),
  295:                   test "test 12" (\_ -> Expect.ok (Err ())),
✗ 296:                   test "test 13" (\_ -> Expect.err (Ok ())),
  297:                   test "test 14" (\_ -> Expect.succeeds (Task.fail "oops")),
  298:                   test "test 15" (\_ -> Expect.fails (Task.succeed "oops")),

I expected a Err but got Ok (())

↓ tests/TestSpec.hs:297
↓ suite loc
✗ test 14

Expectation failed at tests/TestSpec.hs:297
  295:                   test "test 12" (\_ -> Expect.ok (Err ())),
  296:                   test "test 13" (\_ -> Expect.err (Ok ())),
✗ 297:                   test "test 14" (\_ -> Expect.succeeds (Task.fail "oops")),
  298:                   test "test 15" (\_ -> Expect.fails (Task.succeed "oops")),
  299:                   test "test 16" (\_ -> Task.succeed (1 :: Int) |> Expect.andCheck (Expect.equal 2) |> map (\_ -> ()))

"oops"

↓ tests/TestSpec.hs:298
↓ suite loc
✗ test 15

Expectation failed at tests/TestSpec.hs:298
  296:                   test "test 13" (\_ -> Expect.err (Ok ())),
  297:                   test "test 14" (\_ -> Expect.succeeds (Task.fail "oops")),
✗ 298:                   test "test 15" (\_ -> Expect.fails (Task.succeed "oops")),
  299:                   test "test 16" (\_ -> Task.succeed (1 :: Int) |> Expect.andCheck (Expect.equal 2) |> map (\_ -> ()))
  300:                 ]

"Expected failure but succeeded with \"oops\""

↓ tests/TestSpec.hs:299
↓ suite loc
✗ test 16

Expectation failed at tests/TestSpec.hs:299
  297:                   test "test 14" (\_ -> Expect.succeeds (Task.fail "oops")),
  298:                   test "test 15" (\_ -> Expect.fails (Task.succeed "oops")),
✗ 299:                   test "test 16" (\_ -> Task.succeed (1 :: Int) |> Expect.andCheck (Expect.equal 2) |> map (\_ -> ()))
  300:                 ]
  301:         contents <-

▼
1
╷
│ Expect.equal
╵
2
▲


TEST RUN FAILED

Passed:    0
Failed:    18
